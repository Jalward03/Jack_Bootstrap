<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1746px" height="1118px" viewBox="-0.5 -0.5 1746 1118" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2023-02-20T01:22:06.956Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.3.0 Chrome/104.0.5112.114 Electron/20.1.3 Safari/537.36&quot; etag=&quot;DzeLLg7jSmDYamMmrH2Y&quot; version=&quot;20.3.0&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(42, 42, 42);"><defs><clipPath id="mx-clip-649-291-362-54-0"><rect x="649" y="291" width="362" height="54"/></clipPath><clipPath id="mx-clip-649-363-362-82-0"><rect x="649" y="363" width="362" height="82"/></clipPath><clipPath id="mx-clip-219-356-192-74-0"><rect x="219" y="356" width="192" height="74"/></clipPath><clipPath id="mx-clip-839-41-342-84-0"><rect x="839" y="41" width="342" height="84"/></clipPath><clipPath id="mx-clip-839-133-342-70-0"><rect x="839" y="133" width="342" height="70"/></clipPath><clipPath id="mx-clip-584-531-492-334-0"><rect x="584" y="531" width="492" height="334"/></clipPath><clipPath id="mx-clip-584-873-492-246-0"><rect x="584" y="873" width="492" height="246"/></clipPath><clipPath id="mx-clip-19-971-462-54-0"><rect x="19" y="971" width="462" height="54"/></clipPath><clipPath id="mx-clip-19-1033-462-40-0"><rect x="19" y="1033" width="462" height="40"/></clipPath><clipPath id="mx-clip-4-634-482-64-0"><rect x="4" y="634" width="482" height="64"/></clipPath><clipPath id="mx-clip-4-706-482-82-0"><rect x="4" y="706" width="482" height="82"/></clipPath><clipPath id="mx-clip-269-31-482-144-0"><rect x="269" y="31" width="482" height="144"/></clipPath><clipPath id="mx-clip-269-183-482-62-0"><rect x="269" y="183" width="482" height="62"/></clipPath><clipPath id="mx-clip-1189-311-535-104-0"><rect x="1189" y="311" width="535" height="104"/></clipPath><clipPath id="mx-clip-1189-423-535-232-0"><rect x="1189" y="423" width="535" height="232"/></clipPath><clipPath id="mx-clip-1219-761-452-116-0"><rect x="1219" y="761" width="452" height="116"/></clipPath><clipPath id="mx-clip-1219-885-452-122-0"><rect x="1219" y="885" width="452" height="122"/></clipPath><clipPath id="mx-clip-1269-41-472-84-0"><rect x="1269" y="41" width="472" height="84"/></clipPath></defs><g><path d="M 645 286 L 645 260 L 1015 260 L 1015 286" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><path d="M 645 286 L 645 450 L 1015 450 L 1015 286" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 645 286 L 1015 286" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="829.5" y="277.5">PhysicsObject</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-649-291-362-54-0)" font-size="12px"><text x="650.5" y="303.5"># m_shapeID : ShapeType</text><text x="650.5" y="317.5">SHAPE_COUNT  : const int</text></g><path d="M 645 349 L 1015 349" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-649-363-362-82-0)" font-size="12px"><text x="650.5" y="375.5"># PhysicsObject(ShapeType a_shapeID) : m_shapeID(a_shapeID) </text><text x="650.5" y="389.5">+ FixedUpdate(glm::vec2 gravity, float timeStep) = 0 : virtual void</text><text x="650.5" y="403.5">+ Draw(float alpha) = 0 : virtual void</text><text x="650.5" y="417.5">+ ResetPosition() : virtual void</text><text x="650.5" y="431.5">+ IsInside(glm::vec2 point) : virtual bool</text></g><path d="M 215 351 L 215 325 L 415 325 L 415 351" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 215 351 L 215 425 L 415 425 L 415 351" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 215 351 L 415 351" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="314.5" y="342.5">ShapeType : enum</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-219-356-192-74-0)" font-size="12px"><text x="220.5" y="368.5">Joint = -1</text><text x="220.5" y="382.5">Plabe = 0</text><text x="220.5" y="396.5">Circle</text><text x="220.5" y="410.5">Box</text></g><path d="M 835 36 L 835 10 L 1185 10 L 1185 36" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 835 36 L 835 198 L 1185 198 L 1185 36" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 835 36 L 1185 36" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="27.5">Plane</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-839-41-342-84-0)" font-size="12px"><text x="840.5" y="67.5"># m_elasticity : float</text><text x="840.5" y="81.5"># m_normal : glm::vec2</text><text x="840.5" y="95.5"># m_colour : glm::vec4</text><text x="840.5" y="109.5"># m_distanceToOrigin : float</text></g><path d="M 835 124 L 1185 124" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-839-133-342-70-0)" font-size="12px"><text x="840.5" y="145.5">+ Plane(glm::vec2 normal, float distance)</text><text x="840.5" y="159.5">+ ~Plane()</text><text x="840.5" y="173.5">+ ResolveCollision(Rigidbody* actor2, glm::vec2 contact) : void</text></g><path d="M 830 500 L 830 458.12" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 830 451.12 L 833.5 458.12 L 826.5 458.12 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 526 L 580 500 L 1080 500 L 1080 526" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 526 L 580 1114 L 1080 1114 L 1080 526" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 526 L 1080 526" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="829.5" y="517.5">Rigidbody</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-584-531-492-334-0)" font-size="12px"><text x="585.5" y="557.5"># m_mass : float</text><text x="585.5" y="571.5"># m_orientation : float</text><text x="585.5" y="585.5"># m_angularVelocity : float</text><text x="585.5" y="599.5"># m_moment : float</text><text x="585.5" y="613.5"># m_lastOrientation : float</text><text x="585.5" y="627.5"># m_elasticity : float</text><text x="585.5" y="641.5"># m_linearDrag : float</text><text x="585.5" y="655.5"># m_angularDrag : float</text><text x="585.5" y="669.5"># m_isKinematic : bool</text><text x="585.5" y="683.5"># m_isTrigger : bool</text><text x="585.5" y="697.5"># m_colour : glm::vec4</text><text x="585.5" y="711.5"># m_position : glm::vec2</text><text x="585.5" y="725.5"># m_velocity : glm::vec2</text><text x="585.5" y="739.5"># m_lastPosition : glm::vec2</text><text x="585.5" y="753.5"># m_smoothedPosition : glm::vec2</text><text x="585.5" y="767.5"># m_smoothedLocalX : glm::vec2</text><text x="585.5" y="781.5"># m_smoothedLocalY : glm::vec2</text><text x="585.5" y="795.5"># m_localX : glm::vec2</text><text x="585.5" y="809.5"># m_localY : glm::vec2</text><text x="585.5" y="823.5"># m_objectsInside : std::list&lt;PhysicsObject*&gt;</text><text x="585.5" y="837.5"># m_objectsInsideThisFrame : std::list&lt;PhysicsObject*&gt;</text></g><path d="M 580 864 L 1080 864" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-584-873-492-246-0)" font-size="12px"><text x="585.5" y="885.5">+ Rigidbody(ShapeType shapeID, glm::vec2 position, glm::vec2 velocity, float orientation,</text><text x="585.5" y="899.5">   float mass, float moment, float angularVelocity) </text><text x="585.5" y="913.5">+ ~Rigidbody()</text><text x="585.5" y="927.5">+ ApplyForce(glm::vec gravity, float timeStep) : void</text><text x="585.5" y="941.5">+ ResolveCollision(Rigidbody* actor2, glm::vec2 contact, glm::vec2* collisionNormal=nullptr,</text><text x="585.5" y="955.5">   float pen = 0) : void</text><text x="585.5" y="969.5">+ CalculateSmoothedPosition(float alpha) : void</text><text x="585.5" y="983.5">+ CalculateAxes() : void</text><text x="585.5" y="997.5">+ TriggerEnter(PhysicsObject* actor2) : void</text><text x="585.5" y="1011.5">+ ToWorld(glm::vec2 contact) : glm::vec2</text><text x="585.5" y="1025.5">+ collisionCallback : std::function&lt;void(PhysicsObject*)&gt;</text><text x="585.5" y="1039.5">+ triggerEnter : std::function&lt;void(PhysicsObject*)&gt;</text><text x="585.5" y="1053.5">+ triggerExit : std::function&lt;void(PhysicsObject*)&gt;</text><text x="585.5" y="1067.5">+ GetMass() { return m_isKinematic ? INT_MAX : m_mass : float</text><text x="585.5" y="1081.5">+ GetMoment() { return m_isKinematic ? INT_MAX : m_moment : float</text></g><path d="M 15 966 L 15 940 L 485 940 L 485 966" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 966 L 15 1068 L 485 1068 L 485 966" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 966 L 485 966" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="249.5" y="957.5">Circle</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-19-971-462-54-0)" font-size="12px"><text x="20.5" y="997.5"># m_radius : float</text><text x="20.5" y="1011.5"># m_color : glm::vec4</text></g><path d="M 15 1024 L 485 1024" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-19-1033-462-40-0)" font-size="12px"><text x="20.5" y="1045.5">+ Circle(glm::vec2 position, glm::vec2 velocity, float mass, float radius, glm::vec4 color)</text><text x="20.5" y="1059.5">+ ~Circle()</text></g><path d="M 490 693 L 571.88 693" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 578.88 693 L 571.88 696.5 L 571.88 689.5 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 629 L 0 603 L 490 603 L 490 629" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 629 L 0 783 L 490 783 L 490 629" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 629 L 490 629" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="244.5" y="620.5">Box</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-634-482-64-0)" font-size="12px"><text x="5.5" y="646.5"># m_height : float</text><text x="5.5" y="660.5"># m_width : float</text><text x="5.5" y="674.5"># m_extents : glm::vec2</text></g><path d="M 0 697 L 490 697" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-706-482-82-0)" font-size="12px"><text x="5.5" y="718.5">+ Box(glm::vec2 position, float width, float height, glm::vec2 velocity, float mass,</text><text x="5.5" y="732.5">   float orientation, glm::vec4 color)</text><text x="5.5" y="746.5">+ ~Box()</text><text x="5.5" y="760.5">+ CheckBoxCorner(const Box&amp; box, glm::vec2&amp; contact, int&amp; numContacts, float&amp; pen),</text><text x="5.5" y="774.5">   glm::vec2&amp; edgeNormal) : bool</text></g><path d="M 265 26 L 265 0 L 755 0 L 755 26" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 265 26 L 265 240 L 755 240 L 755 26" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 265 26 L 755 26" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="509.5" y="17.5">Spring</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-269-31-482-144-0)" font-size="12px"><text x="270.5" y="57.5"># m_body1 : Rigidbody*</text><text x="270.5" y="71.5"># m_body2 : Rigidbody*</text><text x="270.5" y="85.5"># m_contact1 : glm::vec2</text><text x="270.5" y="99.5"># m_contact2 : glm::vec2</text><text x="270.5" y="113.5"># m_colour : glm::vec4</text><text x="270.5" y="127.5"># m_damping : float</text><text x="270.5" y="141.5"># m_restLength : float</text><text x="270.5" y="155.5"># m_springCoefficient : float</text></g><path d="M 265 174 L 755 174" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-269-183-482-62-0)" font-size="12px"><text x="270.5" y="195.5">+ Spring(Rigidbody* body1, Rigidbody* body2, float springCoefficient, float damping,</text><text x="270.5" y="209.5">   float restLength, glm::vec2 contact1 = glm::vec2(0, 0), glm::contact2 = glm::vec2(0, 0))</text><text x="270.5" y="223.5">+ ~Spring()</text></g><path d="M 1185 306 L 1185 280 L 1728 280 L 1728 306" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1185 306 L 1185 650 L 1728 650 L 1728 306" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1185 306 L 1728 306" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1456" y="297.5">PhysicsScene</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1189-311-535-104-0)" font-size="12px"><text x="1190.5" y="337.5"># m_gravity : static glm::vec2</text><text x="1190.5" y="351.5"># m_timeStep : float</text><text x="1190.5" y="365.5"># m_actors : std::vector&lt;PhysicsObject*&gt;</text></g><path d="M 1185 414 L 1728 414" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1189-423-535-232-0)" font-size="12px"><text x="1190.5" y="435.5">+ PhysicsScene()</text><text x="1190.5" y="449.5">+ ~PhysicsScene()</text><text x="1190.5" y="463.5">+ Update(float dr) : void</text><text x="1190.5" y="477.5">+ Draw() : void</text><text x="1190.5" y="491.5">+ CheckCollision()  : void</text><text x="1190.5" y="505.5">+ ApplyContacForces(Rigidbody* body1, Rigidbody* body2, glm::vec2 norm, float pen) : static void</text><text x="1190.5" y="519.5">+ Plane2Plane(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="533.5">+ Plane2Circle(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="547.5">+ Plane2Box(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="561.5">+ Circle2Circle(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="575.5">+ Circle2Plane(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="589.5">+ Circle2Box(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="603.5">+ Box2Plane(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="617.5">+ Box2Circle(PhysicsObject* , PhysicsObject* ) : static bool</text><text x="1190.5" y="631.5">+ Box2Box(PhysicsObject* , PhysicsObject* ) : static bool</text></g><path d="M 1443 712.01 L 1443 710 L 1443.18 656.01" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1443 729.01 L 1438 720.51 L 1443 712.01 L 1448 720.51 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1443.2 650.76 L 1446.67 657.77 L 1443.18 656.01 L 1439.67 657.75 Z" fill="rgb(240, 240, 240)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1215 756 L 1215 730 L 1675 730 L 1675 756" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1215 756 L 1215 1002 L 1675 1002 L 1675 756" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1215 756 L 1675 756" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1444.5" y="747.5">PhysicsApp</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1219-761-452-116-0)" font-size="12px"><text x="1220.5" y="787.5"># m_2dRenderer : aie::Renderer2D*</text><text x="1220.5" y="801.5"># m_font : aie::Font*</text><text x="1220.5" y="815.5"># m_physicsScene : PhysicsScene*</text><text x="1220.5" y="829.5"># m_objects : std::vector&lt;PhysicsObject*&gt; </text><text x="1220.5" y="843.5"># m_extents = 100 : const float</text><text x="1220.5" y="857.5"># m_aspectRation = 16.0f / 9.0f : const float</text></g><path d="M 1215 876 L 1675 876" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1219-885-452-122-0)" font-size="12px"><text x="1220.5" y="897.5">+ GameScne() </text><text x="1220.5" y="911.5">+ ~GameScene() : virtual</text><text x="1220.5" y="925.5">+ startup() : virtual bool</text><text x="1220.5" y="939.5">+ shutdown() : virtual void</text><text x="1220.5" y="953.5">+ ScreenToWorld(glm::vec2 screenPos) : glm::vec2</text><text x="1220.5" y="967.5">+ WorldToScreen(glm::vec2 worldPos) : glm::vec2</text><text x="1220.5" y="981.5">+ DegreeToRadians(float degrees) : float</text></g><path d="M 485 993 L 532.5 993 L 532.5 991 L 571.88 991" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 578.88 991 L 571.88 994.5 L 571.88 987.5 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1167.01 355 L 1137 355 L 1023.12 355" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1184.01 355 L 1175.51 360 L 1167.01 355 L 1175.51 350 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1016.12 355 L 1023.12 351.5 L 1023.12 358.5 Z" fill="rgb(240, 240, 240)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1265 36 L 1265 10 L 1745 10 L 1745 36" fill="rgb(42, 42, 42)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1265 36 L 1265 120 L 1745 120 L 1745 36" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1265 36 L 1745 36" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(240, 240, 240)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1504.5" y="27.5">Softbody</text></g><g fill="rgb(240, 240, 240)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1269-41-472-84-0)" font-size="12px"><text x="1270.5" y="53.5">+ Softbody()</text><text x="1270.5" y="67.5">+ ~Softbody()</text><text x="1270.5" y="81.5">+ Build(PhysicsScene* scene, glm::vec2 position, float damping, float springForce</text><text x="1270.5" y="95.5">  float spacing, std::vector&lt;std::string&amp; strings&gt;) : static void</text></g><path d="M 755 178 L 755 164 L 795 164 L 795 251.88" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 795 258.88 L 791.5 251.88 L 798.5 251.88 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 965 198 L 965 219 L 895 219 L 895 251.88" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 895 258.88 L 891.5 251.88 L 898.5 251.88 Z" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 375px; margin-left: 620px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">1</div></div></div></foreignObject><text x="620" y="379" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 340px; margin-left: 605px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">m_shapeID</div></div></div></foreignObject><text x="605" y="344" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">m_shapeID</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 245px; margin-left: 1413px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">Softbody</div></div></div></foreignObject><text x="1413" y="249" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">Softbody</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 245px; margin-left: 1480px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">1</div></div></div></foreignObject><text x="1480" y="249" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 665px; margin-left: 1400px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">PhysicsScene</div></div></div></foreignObject><text x="1400" y="669" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">PhysicsScene</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 665px; margin-left: 1470px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">0 . . 1</div></div></div></foreignObject><text x="1470" y="669" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">0 . . 1</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 340px; margin-left: 1063px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">m_actors</div></div></div></foreignObject><text x="1063" y="344" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">m_actors</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 368px; margin-left: 1055px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: none; white-space: nowrap;">0 . .*</div></div></div></foreignObject><text x="1055" y="372" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">0 . .*</text></switch></g><path d="M 1457 128.12 L 1457 150 L 1456.5 280" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1457 121.12 L 1460.5 128.12 L 1453.5 128.12 Z" fill="rgb(240, 240, 240)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 627.01 360 L 418 360 L 423.12 360" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 644.01 360 L 635.51 365 L 627.01 360 L 635.51 355 Z" fill="rgb(240, 240, 240)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/><path d="M 416.12 360 L 423.12 356.5 L 423.12 363.5 Z" fill="rgb(240, 240, 240)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>